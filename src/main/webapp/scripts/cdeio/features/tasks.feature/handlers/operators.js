// Generated by CoffeeScript 1.7.1
(function() {
  var __slice = [].slice;

  define(["jquery", 'underscore'], function($, _) {
    var getFormData;
    getFormData = function(view) {
      var data, values;
      values = view.$$("form").serializeArray();
      data = {};
      return _(values).map(function(item) {
        if (item.name in data) {
          if (_.isArray(data[item.name])) {
            data[item.name] = data[item.name].concat([item.value]);
          } else {
            data[item.name] = [data[item.name], item.value];
          }
        } else {
          data[item.name] = item.value;
        }
        view.model.set(data);
        return _(view.components).each(function(component) {
          var d;
          if (_.isFunction(component.getFormData)) {
            d = component.getFormData();
            if (d) {
              return view.model.set(d.name, d.value);
            }
          }
        });
      });
    };
    return {
      initSelection: function() {
        var args, feature, grid, view;
        feature = arguments[0], view = arguments[1], grid = arguments[2], args = 4 <= arguments.length ? __slice.call(arguments, 3) : [];
        this.$('audit').hide();
        this.$('batchAudit').hide();
        this.$('reject').hide();
        return this.$('batchReject').hide();
      },
      selectChanged: function() {
        var args, feature, grid, isRejectable, selected, view;
        feature = arguments[0], view = arguments[1], grid = arguments[2], args = 4 <= arguments.length ? __slice.call(arguments, 3) : [];
        this.$('audit').hide();
        this.$('batchAudit').hide();
        this.$('reject').hide();
        this.$('batchReject').hide();
        selected = grid.getGridParam('selarrrow');
        isRejectable = _.every(selected, function(v) {
          return view.collection.get(v).get('isRejectable') === true;
        });
        if (selected.length === 1) {
          this.$('audit').show();
          if (isRejectable) {
            return this.$('reject').show();
          }
        } else if (selected.length > 1) {
          if (isRejectable) {
            this.$('batchReject').show();
          }
          return this.$('batchAudit').show();
        }
      },
      audit: function() {
        var app, grid, ogrid, selected;
        grid = this.feature.views["grid"].components[0];
        ogrid = this.feature.views["completed-grid"].components[0];
        selected = grid.getSelected();
        app = this.feature.module.getApplication();
        if (selected.length === 0) {
          return app.info("请选择要操作的记录");
        }
        selected = selected[0].id;
        this.feature.model.set("id", selected);
        $.when(this.feature.model.fetch()).done((function(_this) {
          return function() {
            return app.loadView(_this.feature, "form:" + selected).done(function(view) {
              var buttons;
              buttons = [
                {
                  label: "Finish",
                  fn: function() {
                    var valid;
                    getFormData(view);
                    valid = view.$$("form").valid();
                    if (!valid) {
                      return false;
                    }
                    view.model.set("id", selected);
                    view.model.save().done(function() {
                      grid.reload();
                      return ogrid.reload();
                    });
                    return true;
                  }
                }
              ];
              if (_this.feature.model.get('task').isRejectable) {
                buttons.push({
                  label: "Reject",
                  fn: function() {
                    return _this.feature.request({
                      url: "reject/" + selected,
                      type: 'put',
                      data: {
                        comment: ''
                      }
                    }).done(function() {
                      grid.refresh();
                      return ogrid.refresh();
                    });
                  }
                });
              }
              return app.showDialog({
                view: view,
                title: "Task Process",
                buttons: buttons
              });
            });
          };
        })(this));
        return true;
      },
      batchAudit: function() {
        var app, grid, m, ogrid, selected;
        grid = this.feature.views['grid'].components[0];
        ogrid = this.feature.views["completed-grid"].components[0];
        selected = grid.getSelected();
        app = this.feature.module.getApplication();
        if (selected.length === 0) {
          return app.info("请选择要操作的记录");
        }
        selected = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = selected.length; _i < _len; _i++) {
            m = selected[_i];
            _results.push(m.id);
          }
          return _results;
        })();
        return app.confirm('are you sure to audit these tasks?', (function(_this) {
          return function(sure) {
            if (!sure) {
              return;
            }
            return _this.feature.request({
              url: 'batch/audit',
              type: 'post',
              data: {
                ids: selected
              }
            }).done(function() {
              grid.refresh();
              return ogrid.refresh();
            });
          };
        })(this));
      },
      reject: function() {
        var app, grid, ogrid, selected;
        grid = this.feature.views["grid"].components[0];
        ogrid = this.feature.views["completed-grid"].components[0];
        selected = grid.getSelected();
        app = this.feature.module.getApplication();
        if (selected.length === 0) {
          return app.info("请选择要操作的记录");
        }
        selected = selected[0].id;
        return app.prompt('why this task is rejected?', (function(_this) {
          return function(str) {
            if (str === null) {
              return;
            }
            if (!str) {
              return app.info('请填写意见');
            }
            return _this.feature.request({
              url: 'reject/' + selected,
              type: 'put',
              data: {
                comment: str
              }
            }).done(function() {
              grid.refresh();
              return ogrid.refresh();
            });
          };
        })(this));
      },
      batchReject: function() {
        var app, grid, m, ogrid, selected;
        grid = this.feature.views['grid'].components[0];
        ogrid = this.feature.views["completed-grid"].components[0];
        selected = grid.getSelected();
        app = this.feature.module.getApplication();
        if (selected.length === 0) {
          return app.info("请选择要操作的记录");
        }
        selected = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = selected.length; _i < _len; _i++) {
            m = selected[_i];
            _results.push(m.id);
          }
          return _results;
        })();
        return app.prompt('why these tasks are rejected?', (function(_this) {
          return function(str) {
            if (str === null) {
              return;
            }
            if (!str) {
              return app.info('请填写意见');
            }
            return _this.feature.request({
              url: 'batch/reject',
              type: 'post',
              data: {
                ids: selected,
                comment: str
              }
            }).done(function() {
              grid.refresh();
              return ogrid.refresh();
            });
          };
        })(this));
      }
    };
  });

}).call(this);
