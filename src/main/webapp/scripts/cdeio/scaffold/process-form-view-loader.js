// Generated by CoffeeScript 1.7.1
(function() {
  define(['cdeio/core/view', 'handlebars', 'underscore', 'jquery', 'cdeio/core/process-form-view', 'cdeio/core/form/form-field', 'cdeio/core/util', 'cdeio/scaffold/form-view-loader'], function(View, Handlebars, _, $, ProcessFormView, FormField, util, FormViewLoader) {
    var log;
    log = util.log;
    return {
      type: 'view',
      name: 'process-form',
      fn: function(module, feature, viewName, args) {
        var deferred, url;
        deferred = $.Deferred();
        log({
          baseName: 'process-form-view-loader:MultiGridPickerField'
        }, {
          'viewName': viewName
        });
        url = feature.activeTab ? 'configuration/process/forms/' + viewName : 'configuration/forms/' + viewName;
        feature.request({
          url: url,
          success: function(data) {
            var def, view;
            if (data == null) {
              data = {
                groups: []
              };
            }
            def = _.extend({
              baseName: viewName,
              module: module,
              feature: feature,
              avoidLoadingHandlers: true,
              entityLabel: data.entityLabel,
              formName: viewName
            }, data);
            def.form = {
              groups: data.groups,
              tabs: data.tabs
            };
            view = new ProcessFormView(def);
            view.eventHandlers.formStatusChanged = function(e) {
              var fsc, scaffold, _ref;
              scaffold = this.feature.options.scaffold || {};
              fsc = (_ref = scaffold.handlers) != null ? _ref.formStatusChanged : void 0;
              if (_.isFunction(fsc)) {
                return fsc.call(this, this.getFormData(), $(e.target));
              }
            };
            return deferred.resolve(view);
          }
        });
        return deferred.promise();
      }
    };
  });

}).call(this);
