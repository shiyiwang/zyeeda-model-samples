// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['cdeio/core/form/form-field', 'cdeio/cdeio'], function(FormField, cdeio) {
    var FeatureField;
    cdeio.registerComponentHandler('form-feature-field', (function() {}), function(el, options, view) {
      var app, ops, path, promise;
      app = view.feature.module.getApplication();
      path = options.path;
      ops = _.extend({}, options.options, {
        ignoreExists: true,
        container: el
      });
      promise = app.startFeature(path, ops);
      options.field.featurePromise = promise;
      promise.done(function(feature) {
        options.field.feature = feature;
        if (feature.getFormData) {
          options.field.getFormData = feature.getFormData.bind(feature);
        }
        if (feature.loadFormData) {
          options.field.loadFormData = feature.loadFormData.bind(feature);
        }
        feature.formView = view;
        return feature.formField = options.field;
      });
      return promise;
    });
    FeatureField = (function(_super) {
      __extends(FeatureField, _super);

      function FeatureField() {
        FeatureField.__super__.constructor.apply(this, arguments);
        this.type = 'feature';
        this.height = this.options.height;
        this.hideLabel = this.options.hideLabel !== false;
      }

      FeatureField.prototype.getComponents = function() {
        return [
          {
            selector: this.id,
            type: 'form-feature-field',
            name: this.options.name,
            path: this.options.path,
            options: this.options.options,
            field: this
          }
        ];
      };

      FeatureField.prototype.getFormData = function() {};

      FeatureField.prototype.getTemplateString = function() {
        return '<div class="control-group">\n    <% if (!hideLabel) { %>\n        <label class="control-label label label-info arrowed-in arrowed-in-right" for="<%= id %>"><%= label %><% if (required) { %>\n            <span class="required-mark">*</span>\n        <% } %></label>\n    <% } %>\n    <div class="controls">\n        <div id="<%= id %>" class="c-feature-field" <% if (height) { %>style="height: <%= height %>;"<% } %>></div>\n    </div>\n</div>';
      };

      return FeatureField;

    })(FormField);
    FormField.add('feature', FeatureField);
    return FeatureField;
  });

}).call(this);
