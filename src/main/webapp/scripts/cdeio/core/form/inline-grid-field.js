// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'cdeio/core/form/form-field', 'cdeio/core/form/feature-field'], function($, _, FormField, FeatureField) {
    var InlineGridField;
    InlineGridField = (function(_super) {
      __extends(InlineGridField, _super);

      function InlineGridField(form, group, options) {
        var opt;
        if (!options.source) {
          throw new Error('source must be specified');
        }
        opt = _.extend({
          hideLabel: false,
          path: 'cdeio:inline-grid',
          options: {
            allowPick: options.allowPick,
            allowAdd: options.allowAdd,
            allowEdit: options.allowEdit,
            url: options.source,
            readOnly: options.readOnly || options.disabled,
            gridOptions: {
              deferLoading: 0,
              paginate: false,
              multiple: options.multiple === true,
              form: form
            },
            loadViewFormDeferred: options.loadViewFormDeferred || void 0,
            disableShow: options.disableShow
          }
        }, options);
        if (options.needDeferLoading === false) {
          delete opt.options.gridOptions.deferLoading;
        }
        _.extend(opt.options.gridOptions, options.grid);
        if (options.allowPick === true) {
          opt.options.picker = {
            url: options.source,
            remoteDefined: true,
            title: '选择' + (options.label || ''),
            multiple: options.multiple === true,
            crossPage: options.crossPage === true,
            type: options.pickerType
          };
        }
        InlineGridField.__super__.constructor.call(this, form, group, opt);
        this.type = 'inline-grid';
      }

      return InlineGridField;

    })(FeatureField);
    FormField.add('inline-grid', InlineGridField);
    return InlineGridField;
  });

}).call(this);
